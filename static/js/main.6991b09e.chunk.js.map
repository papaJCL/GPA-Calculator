{"version":3,"sources":["App.js","index.js"],"names":["Background","styled","div","Header","h1","InstructionsBox","CalculateButton","button","ResetButton","Styles","App","useState","grade1","credit1","grade2","credit2","grade3","credit3","grade4","credit4","grade5","credit5","grade6","credit6","gridInputs","setGridInputs","baseState","showErrorBox","Swal","fire","title","text","icon","cancelButtonText","showCancelButton","showConfirmButton","returnAnswerString","answer","toFixed","convertGradeToNum","grade","credit","toLowerCase","renderFormRow","Row","Col","Input","name","placeholder","value","onChange","e","target","handleGradeChange","handleCreditChange","Container","bottom","onClick","grades","credits","finalAnswer","Object","entries","map","key","includes","push","gradeArray","newGrades","i","length","s","match","checkIfValidGrade","creditArray","newCredits","integer","parseInt","Number","isInteger","checkIfValidCredits","undefined","sumArray","reduce","a","b","getCalculation","isNaN","message","footer","showAnswerBox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6991b09e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Input } from 'reactstrap'\nimport Fade from 'react-reveal/Fade';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport Swal from 'sweetalert2'\nimport styled from 'styled-components';\nimport './App.css'\n\n\n// ===========================================================================\n// STYLED COMPONENTS =========================================================\n\nconst Background = styled.div`\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 656px) {\n    height: 100%;\n    }\n`\n\nconst Header = styled.h1`\n  color: #fafafa;\n  text-transform: uppercase;\n  font-size: 3.5em;\n  padding-bottom: 2rem;\n  padding-top: 2rem;\n  text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n  font-family: 'Raleway', sans-serif;\n  letter-spacing: 3px;\n  text-align: center;\n  @media (max-width: 656px) {\n    font-size: 2.5em;\n    }\n`\n\nconst InstructionsBox = styled.div`\n  margin-top: 2rem;\n  white-space: pre-line; \n  background: #fafafa;\n  box-shadow: 0 15px 25px rgba(0,0,0,.6);\n  padding: 15px;\n  border-radius: 15px;\n`\n\nconst CalculateButton = styled.button`\n  box-shadow: 0 15px 25px rgba(0,0,0,.6);\n  text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n  padding: 15px;\n  margin: 10px;\n  border-radius: 15px;\n  display: inline-block;\n  width: 40%;\n  border: none;\n  color:#ededed;\n  background-color:#66ccff;\n  padding: 14px 28px;\n  font-size: 32px;\n  cursor: pointer;\n  text-align: center;\n  height: 75px;\n  transition: transform .2s;\n  \n  @media (max-width: 656px) {\n    height: 90px;\n    width: 90%;\n    transform: scale(1);\n    }\n    &:hover {\n        transform: scale(1.05);\n    },\n`;\n\nconst ResetButton = styled.button`\n  box-shadow: 0 15px 25px rgba(0,0,0,.6);\n  text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n  color:#ededed;\n  padding: 15px;\n  margin: 10px;\n  border-radius: 15px;\n  display: inline-block;\n  width: 40%;\n  border: none;\n  background-color: #ff6680;\n  padding: 14px 28px;\n  font-size: 32px;\n  cursor: pointer;\n  text-align: center;\n  height: 75px;\n  transition: transform .3s;\n\n  @media (max-width: 656px) {\n    width: 90%;\n    transform: scale(1);\n    }\n    &:hover {\n        transform: scale(1.05);\n    },\n`;\n\nconst Styles = styled.div`\n  margin-top: .4rem;\n    .form-control:focus {\n        border-color: grey;\n        box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.075) inset, 0px 0px 0px grey;\n    }\n    input[type=text] {\n        background-color: white;\n        color: #0D2451;\n        font-size: 25x;\n        \n        border: 1px solid grey;\n        border-radius: 4px;\n    }\n    @media (max-width: 656px) {\n      input[type=text] {\n        color: #0D2451;\n        font-size: 11px;\n      }\n    }\n`;\n\n// ===========================================================================\n// ===========================================================================\n\n\n// ===========================================================================\n// GPA APP ===================================================================\n\nfunction App() {\n\n  // STATE MANAGEMENT ----------------------------------------------------\n  const [gridInputs, setGridInputs] = useState({\n    grade1: '', credit1: '',\n    grade2: '', credit2: '',\n    grade3: '', credit3: '',\n    grade4: '', credit4: '',\n    grade5: '', credit5: '',\n    grade6: '', credit6: '',\n  });\n\n  const [baseState] = useState(gridInputs);\n  // ----------------------------------------------------------------------\n\n  // CHANGING STATE -------------------------------------------------------\n  const resetToBaseState = () => {\n    setGridInputs(baseState);\n  }\n\n  const handleGradeChange = (grade, e) => {\n    setGridInputs({\n      ...gridInputs, [grade]: e.target.value,\n    });\n  }\n\n  const handleCreditChange = (credit, e) => {\n    setGridInputs({\n      ...gridInputs, [credit]: e.target.value,\n    });\n  }\n  // ---------------------------------------------------------------------\n\n\n\n  // POPUPS ---------------------------------------------------------------\n  const showErrorBox = () => {\n    return (\n      Swal.fire({\n        title: 'Error!',\n        text: \"One or more of the inputs is formatted incorrectly, make sure the grade is letter A through F and credits is a number\",\n        icon: 'error',\n        cancelButtonText: 'Retry',\n        showCancelButton: true,\n        showConfirmButton: false,\n      })\n    );\n  }\n\n  const showAnswerBox = (answer) => {\n    let message = returnAnswerString(answer);\n    return (\n      Swal.fire({\n        title: message[0],\n        footer: message[1],\n        text: answer.toFixed(2),\n        icon: message[2],\n        cancelButtonText: 'Back',\n        showCancelButton: true,\n        showConfirmButton: false,\n      })\n    );\n  }\n  // ---------------------------------------------------------------------------\n\n\n  // GPA CALCULATION -------------------------------------------------\n  const returnAnswerString = (answer) => {\n    answer = answer.toFixed(2)\n    if (answer >= 3.0) {\n      return [(\"Impressive! \\nYour GPA is\"), (\"Congrats you're doing great!\"), ('success')]\n    }\n    else if (answer > 2.5 && answer < 3.0) {\n      return [(\"Not bad! \\nYour GPA is\"), (\"Keep studying and bump it up!\"), ('warning')]\n    }\n    else if (answer <= 2.5) {\n      return [(\"Keep working hard!\\n Your GPA is\"), (\"Your GPA is quite low but keep trying!\"), ('error')]\n    }\n  }\n\n  const convertGradeToNum = (grade, credit) => {\n    grade = grade.toLowerCase();\n    switch (grade) {\n      case ('a'):\n        return ((credit * 4));\n      case ('b'):\n        return ((credit * 3));\n      case ('c'):\n        return ((credit * 2));\n      case ('d'):\n        return ((credit * 1));\n      case ('f'):\n        return ((credit * 0));\n    }\n  }\n\n  const getCalculation = (gradeArray, credits) => {\n    let sumArray = []\n    for (var i = 0; i < gradeArray.length; i++) {\n      sumArray.push((convertGradeToNum(gradeArray[i], credits[i])))\n    }\n    return ((sumArray.reduce((a, b) => a + b, 0)) / credits.reduce((a, b) => a + b, 0));\n  }\n\n  const checkIfValidCredits = (creditArray) => {\n    let newCredits = []\n    for (var i = 0; i < creditArray.length; i++) {\n      var integer = parseInt(creditArray[i], 10);\n      if (Number.isInteger(integer) == true && creditArray[i].length != 0) {\n        newCredits.push(integer);\n      }\n      else if (creditArray[i].length != 0) {\n        showErrorBox()\n        return;\n      }\n    }\n    return newCredits;\n  }\n\n  const checkIfValidGrade = (gradeArray) => {\n    let newGrades = []\n    for (var i = 0; i < gradeArray.length; i++) {\n      var s = gradeArray[i];\n      if (s.match(/[a-f]/i) && s.length == 1) {\n        newGrades.push(s);\n      }\n      else if (s.length != 0) {\n        showErrorBox()\n        return;\n      }\n    }\n    return newGrades;\n  }\n\n  const calculateGPA = () => {\n    let grades = [];\n    let credits = [];\n    let finalAnswer = null;\n\n    Object.entries(gridInputs).map(([key, value]) => {\n      if (key.includes(\"grade\")) {\n        grades.push(value)\n      }\n      if (key.includes(\"credit\")) {\n        credits.push(value)\n      }\n    })\n\n    grades = checkIfValidGrade(grades);\n    credits = checkIfValidCredits(credits);\n\n    if (grades !== undefined && credits !== undefined) {\n      finalAnswer = getCalculation(grades, credits);\n      if (!isNaN(finalAnswer)) {\n        showAnswerBox(finalAnswer);\n      }\n    }\n  }\n  // ---------------------------------------------------------------------------\n\n  // RENDERING INDIVIDUAL ROWS\n  const renderFormRow = (grade, credit) => {\n    return (\n      <Row >\n        <Col  >\n          <Styles>\n            <Input name={grade} placeholder={\"Letter Grade(A-F)\"} value={gridInputs[grade]} onChange={(e) => handleGradeChange(grade, e)} />\n          </Styles>\n        </Col >\n        <Col  >\n          <Styles>\n            <Input name={credit} placeholder={\"Credits\"} value={gridInputs[credit]} onChange={(e) => handleCreditChange(credit, e)} />\n          </Styles>\n        </Col>\n      </Row>\n    )\n  }\n\n  // RENDERING GRID\n  const renderInputs = () => {\n    return (\n      <Fade bottom>\n        <InstructionsBox>\n          <div >\n            {renderFormRow(\"grade1\", \"credit1\")}\n            {renderFormRow(\"grade2\", \"credit2\")}\n            {renderFormRow(\"grade3\", \"credit3\")}\n            {renderFormRow(\"grade4\", \"credit4\")}\n            {renderFormRow(\"grade5\", \"credit5\")}\n            {renderFormRow(\"grade6\", \"credit6\")}\n            <br />\n          </div>\n        </InstructionsBox>\n      </Fade>\n    )\n  }\n\n  //RENDERING INSTRUCTIONS\n  const instructions = () => {\n    return (\n      <Fade bottom >\n        <InstructionsBox>\n          <h4>INSTRUCTIONS</h4>\n          <p >\n            {\"1. For the letter grade column, put in your letter grade(A through F)\\n\" +\n              \"2. For the credits column put how many credits its worth\\n\" +\n              \"3. Leave the rest of the rows blank once you've put all your classes in\\n\" +\n              \"4. Press Calculate when done\"}\n          </p>\n        </InstructionsBox>\n      </Fade>\n    )\n  }\n\n\n  return (\n    <div>\n      <Background>\n        <Header>Gpa Calculator</Header>\n        <Container>\n          {instructions()}\n          {renderInputs()}\n          <br />\n          <center>\n            <CalculateButton onClick={calculateGPA} >\n              Calculate\n          </CalculateButton>\n            <ResetButton onClick={resetToBaseState} >\n              Reset\n          </ResetButton>\n          </center>\n        </Container>\n      </Background>\n    </div>\n  )\n}\n\nexport default App;\n// ===========================================================================\n// ===========================================================================\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}